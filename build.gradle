plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")

    implementation("org.springframework.data:spring-data-envers")

    implementation('io.jsonwebtoken:jjwt-api:0.15.0') // 최신 버전으로 업데이트
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.15.0')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.15.0')

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

    runtimeOnly("com.h2database:h2")

    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootRun') {
    systemProperties = System.getProperties()
}

tasks.named('bootJar') {
    enabled = true
}

tasks.named('jar') {
    enabled = false
}
